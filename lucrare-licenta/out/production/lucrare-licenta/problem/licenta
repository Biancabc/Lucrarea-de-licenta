
    Warehouse problem = new Warehouse();
    problem.execute();

    for (int i = 0; i < problem.W; i++) {
        String vi = "Depozitul".concat(String.valueOf(i + 1));
        resultedGraph.addVertex(vi);
        for (int j = 0; j < problem.S; j++) {
            if (problem.Supplier[j] == (i + 1)) {
                String vj = "Magazinul".concat(String.valueOf(j + 1));
                resultedGraph.addVertex(vj);
                resultedGraph.addEdge(vi, vj, new RelationshipEdge("Aprovizioneaza"));
            }
        }
    }



JGraphXAdapter<String, RelationshipEdge> jgxAdapter = new JGraphXAdapter<>(resultedGraph);




    //Numărul de depozite
    int W = 4;

    //Numărul de magazine
    int S = 7;

    //Costul de întreținere
    int C = 40;

    //Vectorul de capacități
    int[] K = new int[]{1, 4, 2, 3};

    //Matricea pentru costurile de aprozionare
    int[][] P = new int[][]{ {20, 24, 11, 25},
                             {28, 27, 82, 83},
                             {74, 97, 71, 96},
                             {2, 55, 73, 69},
                             {46, 96, 59, 83},
                             {42, 22, 29, 67},
                             {1, 5, 73, 59}}


//            int [] K ={ 1, 4, 2, 1, 3, 3, 1};
//                    // P
//            int P[][]={{ 20, 24, 11, 25, 30, 15, 23},
//                    {28, 27, 82, 83, 74, 24, 11},
//                    {74, 97, 71, 96, 70, 82, 27},
//                    {2, 55, 73, 69, 61, 10, 96},
//                    {46, 96, 59, 83, 4, 36, 58},
//                    {42, 22, 29, 67, 59, 64, 23},
//                    {1, 5, 73, 59, 56, 48, 13},
//                    {10, 73, 13, 43, 96, 1, 82},
//                    {93, 35, 63, 85, 46, 99, 17},
//                    {47, 65, 55, 71, 95, 25, 35},
//                    {67, 59, 42, 22, 2, 46, 96},
//                    {56, 1, 5, 73, 5, 42, 22},
//                    {43, 96, 10, 73, 1, 1, 5},
//                    {85, 46, 93, 35, 6, 10, 73}};
//
//
//            Warehouse pb=new Warehouse(7,14,30, K, P);
//            pb.execute();
